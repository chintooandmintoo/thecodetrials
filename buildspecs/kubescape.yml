version: 0.2

phases:
  install:
    commands:
      - curl -s https://raw.githubusercontent.com/kubescape/kubescape/master/install.sh | /bin/bash

  pre_build:
    commands:
      # Check if any Kubernetes manifests or Helm charts exist
      - |
        if ! find . -type f -regex ".*\.\(yaml\|yml\)" -exec grep -l "kind:" {} \; | grep -q .; then
          if ! find . -type f -name "Chart.yaml" | grep -q .; then
            echo "No Kubernetes manifests or Helm charts found - skipping Kubescape scan"
            echo "Creating empty results file"
            echo '{"frameworks": [{"controls": [], "name": "nsa", "version": "1.0"}], "results": []}' > kubescape-results.json
            exit 0
          fi
        fi
      - echo "Kubernetes files found - proceeding with Kubescape scan"

  build:
    commands:
      - echo "Running Kubescape scan..."
      - |
        # Scanning K8s YAML files without a cluster connection
        K8S_FILES=$(find . -type f -regex ".*\.\(yaml\|yml\)" -exec grep -l "kind:" {} \;)
        if [ ! -z "$K8S_FILES" ]; then
          kubescape scan framework nsa $K8S_FILES --format json --output kubescape-results.json || true
        else
          # Fallback to create an empty results file
          echo '{"frameworks": [{"controls": [], "name": "nsa", "version": "1.0"}], "results": []}' > kubescape-results.json
        fi
      - ls -la

  post_build:
    commands:
      - |
        TIMESTAMP=$(date +%Y-%m-%d-%H-%M)
        if [ -f "kubescape-results.json" ]; then
          aws s3 cp kubescape-results.json s3://${RESULTS_BUCKET}/kubescape/${TIMESTAMP}/scan.json
        else
          echo "Results file not found, creating empty one"
          echo '{"frameworks": [{"controls": [], "name": "nsa", "version": "1.0"}], "results": []}' > kubescape-results.json
          aws s3 cp kubescape-results.json s3://${RESULTS_BUCKET}/kubescape/${TIMESTAMP}/scan.json
        fi

artifacts:
  files:
    - kubescape-results.json
  base-directory: .
