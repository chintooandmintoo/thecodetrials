version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - echo "Installing SonarQube Scanner"
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner-cli-4.7.0.2747-linux.zip
      - mv sonar-scanner-4.7.0.2747-linux /opt/sonar-scanner
      - chmod -R 775 /opt/sonar-scanner
      - echo "Installation complete"

  pre_build:
    commands:
      - echo "Preparing for build"
      - echo "SonarQube Host: $SONARQUBE_HOST"
      - echo "Starting Maven build process"
      - mvn clean compile

  build:
    commands:
      - echo "Creating sonar-project.properties"
      - echo "sonar.projectKey=devsecops-sonar" > sonar-project.properties
      - echo "sonar.projectName=WebGoat" >> sonar-project.properties
      - echo "sonar.sources=src/main/java" >> sonar-project.properties
      - echo "sonar.java.binaries=target/classes" >> sonar-project.properties
      - echo "sonar.host.url=$SONARQUBE_HOST" >> sonar-project.properties
      - echo "sonar.login=$SONARQUBE_TOKEN" >> sonar-project.properties
      - echo "sonar-project.properties created"
      - echo "Running SonarQube scan"
      - /opt/sonar-scanner/bin/sonar-scanner -X > sonarqube_scanreport.json || true

  post_build:
    commands:
      - echo "Uploading scan results"
      - sonar_link=$(grep -oP "you can browse http://[^, ]+" sonarqube_scanreport.json || echo "Link not found")
      - echo "SonarQube link: $sonar_link"
      - aws s3 cp sonarqube_scanreport.json s3://${RESULTS_BUCKET}/sonarqube/ || true

artifacts:
  files:
    - sonarqube_scanreport.json
    - sonar-project.properties
