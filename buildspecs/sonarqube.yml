version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
      nodejs: 16
    commands:
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner-cli-4.7.0.2747-linux.zip
      - export PATH=$PATH:./sonar-scanner-4.7.0.2747-linux/bin/

  pre_build:
    commands:
      - echo "Starting SonarQube analysis..."
      - TIMESTAMP=$(date +%Y-%m-%d-%H-%M)
      # Fetch SonarQube token from Parameter Store
      - SONAR_TOKEN=$(aws ssm get-parameter --name "/devsecops/sonarqube/token" --with-decryption --query "Parameter.Value" --output text)
      - SONAR_HOST=$(aws ssm get-parameter --name "/devsecops/sonarqube/host" --query "Parameter.Value" --output text)

  build:
    commands:
      - |
        sonar-scanner \
          -Dsonar.projectKey=${PROJECT_NAME} \
          -Dsonar.sources=. \
          -Dsonar.host.url=${SONAR_HOST} \
          -Dsonar.login=${SONAR_TOKEN} \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.java.binaries=. \
          -Dsonar.python.version=3 \
          -Dsonar.exclusions=**/node_modules/**,**/*.test.js,**/*.spec.js \
          -Dsonar.coverage.exclusions=**/*.test.js,**/*.spec.js \
          -Dsonar.qualitygate.wait=true

  post_build:
    commands:
      - |
        # Copy SonarQube analysis results
        if [ -f ".scannerwork/report-task.txt" ]; then
          aws s3 cp .scannerwork/report-task.txt s3://${RESULTS_BUCKET}/sonarqube/${TIMESTAMP}/report-task.txt
        fi
      - |
        # Check quality gate status
        REPORT_URL=$(cat .scannerwork/report-task.txt | grep "serverUrl" | cut -d'=' -f2-)
        CE_TASK_ID=$(cat .scannerwork/report-task.txt | grep "ceTaskId" | cut -d'=' -f2-)
        
        # Wait for analysis to complete and get quality gate status
        sleep 10
        QUALITY_GATE_STATUS=$(curl -s -u ${SONAR_TOKEN}: "${SONAR_HOST}/api/qualitygates/project_status?analysisId=${CE_TASK_ID}" | jq -r '.projectStatus.status')
        
        echo "Quality Gate Status: ${QUALITY_GATE_STATUS}"
        
        if [ "${QUALITY_GATE_STATUS}" = "ERROR" ]; then
          echo "Quality Gate failed!"
          exit 1
        fi

artifacts:
  files:
    - .scannerwork/report-task.txt
    - sonar-project.properties
  name: sonarqube-results

cache:
  paths:
    - '.sonar/**/*'
    - '.scannerwork/**/*'
